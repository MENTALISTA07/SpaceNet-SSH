#!/bin/bash
clear
apt-get install lolcat -y &>/dev/null
apt-get install figlet -y &>/dev/null
apt-get install curl -y &>/dev/null
apt install git -y &>/dev/null 
apt install figlet boxes -y &>/dev/null
cd $HOME
[[ "$(whoami)" != "root" ]] && {
    echo -e "\033[0;34m[\033[0;37mErro\033[0;34m] \033[1;37m- \033[0;34mvoc√™ precisa executar como root\033[0m"
    rm $HOME/Plus >/dev/null 2>&1
    exit 0
}
_lnk=$(echo 'z1:y#x.5s0ul&p4hs$s.0a72d*n-e!v89e032:3r' | sed -e 's/[^a-z.]//ig' | rev)
_Ink=$(echo '/3√óu3#s87r/l32o4√óc1a√ól1/83√ól24√ói0b√ó' | sed -e 's/[^a-z/]//ig')
_1nk=$(echo '/3√óu3#s√ó87r/83√ól2√ó4√ói0b√ó' | sed -e 's/[^a-z/]//ig')
cd $HOME
fun_bar() {
    comando[0]="$1"
    comando[1]="$2"
    (
        [[ -e $HOME/fim ]] && rm $HOME/fim
        ${comando[0]} -y >/dev/null 2>&1
        ${comando[1]} -y >/dev/null 2>&1
        touch $HOME/fim
    ) >/dev/null 2>&1 &
    tput civis
    echo -ne "\033[0;37m‚ù™\033[0;34mAGUARDE \033[1;37m> \033[1;32m‚û†"
    while true; do
        for ((i = 0; i < 13; i++)); do
            echo -ne "\033[0;36m‚ñì"
            sleep 0.3s
        done
        [[ -e $HOME/fim ]] && rm $HOME/fim && break
        echo -e "\033[1;37m‚ü©"
        sleep 1s
        tput cuu1
        tput dl1
        echo -ne "\033[0;37m‚ù™\033[0;34mAGUARDE \033[1;37m> \033[1;37m‚ü®"
    done
    echo -e "\033[0;34m]\033[1;37m -\033[1;32m OK !\033[1;37m"
    tput cnorm
}
function verif_key() {
    krm=$(echo '5:q-3gs2.o7%8:1' | rev)
    chmod +x $_Ink/list >/dev/null 2>&1
    [[ ! -e "$_Ink/list" ]] && {
        echo -e "\n\033[0;37mCHAVE DE ATIVA√á√ÉO INV√ÅLIDA!\033[0m"
        rm -rf $HOME/Plus >/dev/null 2>&1
        sleep 5
        clear
        exit 1
    }
}

otimize_python() {
    # INSTALA PYTHON AO PYTHON2
    apt-get install python -y >/dev/null 2>&1
    apt-get install python2 -y >/dev/null 2>&1
    # INSTALA PYTHON3.6 AO PYTHON3.9
    apt-get install python3.6 -y >/dev/null 2>&1
    apt-get install python3.7 -y >/dev/null 2>&1
    apt-get install python3.8 -y >/dev/null 2>&1
    apt-get install python3.9 -y >/dev/null 2>&1
    # CRIA ALTERNATIVAS PYTHON
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1 >/dev/null 2>&1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 3 >/dev/null 2>&1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 2 >/dev/null 2>&1
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 4 >/dev/null 2>&1
    # INSTALA PIP
    apt install pip -y
    apt install python3-pip -y
    # INSTALA SOCAT
    apt install socat -y
    #SETAR PYTHON3
    update-alternatives --set python3 /usr/bin/python3.6
}
echo "SCRIPT EM DESENVOLVIMENTO !!"
echo -e "${green}${1}${end}"
echo -e "\033[01;31m‚ïë\033[0;37m\033[5;34;47m                ATUALIZANDO OS REPOSIT√ìRIOS !            \033[0;34m \033[0m\033[01;31m‚ïë"
    sleep 5s
    dpkg --configure -a
    apt update -y && apt upgrade -y
    apt install unzip python3 -y
    clear
    echo ""
    figlet "SPACE - NET" | lolcat
echo -e "\033[01;31m‚óè‚ùØ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùÆ‚óè\033[0m"
echo ""
echo -e "\033[0;35m‚ñí \E[5;34;47m           SISTEMA OPERACIONAIS COMPAT√çVEIS             \E[0m \033[0;35m‚ñí"
echo ""
echo -e "\033[1;37m‚óâ \033[0;34m‚û£ ùôêùòΩùôêùôâùôèùôê ‚ù∞ 18 ‚ù± x64\033[0m ‚úì"
echo -e "\033[0;37m‚óâ \033[0;34m‚û£ ùôêùòΩùôêùôâùôèùôê ‚ù∞ 20 ‚ù± x64\033[0m ‚úì"
echo -e "\033[1;37m‚óâ \033[0;34m‚û£ ùòãùòåùòâùòêùòàùòï  ‚ù∞ 9 ‚ù± x64\033[0m ‚úì"
echo -e "\033[1;37m‚óâ \033[0;34m‚û£ ùòãùòåùòâùòêùòàùòï ‚ù∞ 10 ‚ù± x64\033[0m ‚úì"
echo -e "\033[1;37m‚óâ \033[0;34m‚û£ ùòãùòåùòâùòêùòàùòï ‚ù∞ 11 ‚ù± %x64\033[0m ‚úì"
echo -e "\033[0;37m \033[0;34m\033[0m"
echo -e "\033[0;37m‚óâ \033[0;34mUSE UBUNTU 18 x64 PARA UMA MELHOR EXPERI√äNCIA\033[0m"
echo -e "\033[0;37m‚Ä¢ \033[0;34mUSE UBUNTU 18 x64 PARA (V2RAY) EVITEM OUTROS SISTEMAS\033[0m"
echo -e "\033[0;37m \033[0;34m\033[0m"
echo -e "\033[01;31m‚óè‚ùØ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùÆ‚óè\033[0m"
#-----------------------------------------------------------------------------------------------------------------
echo -e "\n\033[0;36mVERIFICANDO LINK's E DEPEND√äNCIAS... \033[0m" ; rm $_Ink/list > /dev/null 2>&1; wget -P $_Ink https://raw.githubusercontent.com/MENTALISTA07/SpaceNet-SSH/main/Install/list >/dev/null 2>&1
    verif_key
    sleep 8s
    echo "/bin/menu" >/bin/h && chmod +x /bin/h >/dev/null 2>&1
    rm versao* >/dev/null 2>&1
    wget https://raw.githubusercontent.com/MENTALISTA07/SpaceNet-SSH/main/Install/versao >/dev/null 2>&1
    rm v2raymanager >/dev/null 2>&1
    wget https://raw.githubusercontent.com/MENTALISTA07/SpaceNet-SSH/main/Modulos/v2raymanager >/dev/null 2>&1
    wget https://raw.githubusercontent.com/MENTALISTA07/SpaceNet-SSH/main/Modulos/botteste.sh >/dev/null 2>&1
    chmod 777 v2raymanager >/dev/null 2>&1
    chmod 777 botteste.sh >/dev/null 2>&1
    mkdir $HOME/BOT >/dev/null 2>&1
    cd $HOME/BOT
    wget https://raw.githubusercontent.com/MENTALISTA07/SpaceNet-SSH/main/Modulos/ShellBot.sh >/dev/null 2>&1
    chmod 777 ShellBot.sh >/dev/null 2>&1
    cd >/dev/null 2>&1
    chmod 777 licence >/dev/null 2>&1
    mkdir /etc/rec >/dev/null 2>&1
    cd /etc/rec
    wget https://raw.githubusercontent.com/MENTALISTA07/SpaceNet-SSH/main/Modulos/licence >/dev/null 2>&1
    chmod 777 licence >/dev/null 2>&1
    cd >/dev/null 2>&1
    #-----------------------------------------------------------------------------------------------------------------
    echo -e "\033[0;36mVERIFICANDO CHAVE DE \033[0;37mATIVA√á√ÉO"
    sleep 5s
    echo ""
    echo -e "\n\033[1;32mCHAVE DE ATIVA√á√ÉO VALIDA!\033[1;32m"
    sleep 3s
    echo ""
    [[ -f "$HOME/usuarios.db" ]] && {
        clear
        figlet "SPACE - NET" | lolcat
        echo "SCRIPT EM DESENVOLVIMENTO !! Bay @MENT4LL" 
        echo -e "\033[01;31m‚óè‚ùØ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùÆ‚óè\033[0m"
        echo -e "  \033[0;37m\033[5;34;47m                  OPA DETECTAMOS...                 \033[0;34m \033[0m"
        echo -e "\033[01;31m‚óè‚ùØ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùÆ‚óè\033[0m"
        echo -e "\033[1;34mDADOS DE USU√ÅRIOS ENCONTRADO!"
        echo ""
        echo -e "\033[0;36m LOGINS"
        echo -e "\033[0;36m SENHAS"
        echo -e "\033[0;36m LIMITE"
        echo -e "\033[0;36m DIAS"
        echo -e ""
        echo -e "\033[0;34mLOCALIZADO NO ARQUIVO ‚ûû \033[1;32m(usuarios.db)"
        echo -e "\n\033[1;37m[\033[0;37m1\033[1;37m] \033[0;34mMANTER DADOS ATUAL\033[0m"
        echo -e "\033[1;37m[\033[0;37m2\033[1;37m] \033[0;34mCRIAR UMA NOVA BASE DE DADOS\033[0m"
        echo -e ""
        echo -e "\033[0;33mTENHA CERTEZA DO QUE VOC√ä VAI \033[0;37mFAZER!"
        echo -e "\033[01;31m‚óè‚ùØ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ùÆ‚óè\033[0m"
        echo ""
        tput setaf 4
        tput bold
        read -p "Op√ß√£o 1 ou 2 ?: " -e -i 1 optiondb
        tput sgr0
    } || {
        awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' >$HOME/usuarios.db
    }
    [[ "$optiondb" = '2' ]] && awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' >$HOME/usuarios.db
    clear
    tput setaf 7
    tput setab 4
    tput bold
    echo -e "${whiteb}${1}${end}"
    printf '%35s%s%-18s\n' " AGUARDE A INSTALA√á√ÉO FINALIZAR"
    tput sgr0
    echo ""
    echo ""
    tput setaf 4
    tput bold
    echo -e "          \033[0;34m[\033[0;37m!\033[0;34m] \033[1;32mATUALIZANDO SISTEMA \033[0;34m[\033[0;37m!\033[0;34m]\033[0m"
    echo ""
    echo -e "    \033[0;32mATUALIZA√á√ïES COSTUMA DEMORAR UM POUCO!\033[0m"
    echo ""
    fun_attlist() {
        apt-get update -y
        [[ ! -d /usr/share/.plus ]] && mkdir /usr/share/.plus
        echo "crz: $(date)" >/usr/share/.plus/.plus
    }
    fun_bar 'fun_attlist'
    clear
    echo ""
    echo -e "          \033[0;34m[\033[0;37m!\033[0;34m] \033[1;32mINSTALANDO PACOTES \033[0;34m[\033[0;37m!\033[0;34m] \033[0m"
    echo ""
    echo -e "\033[0;34mINSTALANDO PACOTES EXTREMAMENTE  NECESS√ÅRIOS !\033[0m"
    echo ""
    inst_pct() {
        _pacotes=("bc" "screen" "nano" "unzip" "lsof" "netstat" "net-tools" "dos2unix" "nload" "jq" "curl" "figlet" "python3" "node.js" "python-pip" "python" "at")
        for _prog in ${_pacotes[@]}; do
            apt install $_prog -y
        done
        pip install speedtest-cli
    }
    fun_bar 'inst_pct'
    echo ""
    echo -e "\033[0;34mATIVANDO PORTAS NECESS√ÅRIAS PRA USO !\033[0m"
    sleep 4s
    [[ -f "/usr/sbin/ufw" ]] && ufw allow 443/tcp
    ufw allow 80/tcp
    ufw allow 8181/tcp
    ufw allow 3128/tcp
    ufw allow 8799/tcp
    ufw allow 8080/tcp
    clear
    echo ""
    echo -e "              \033[0;34m[\033[0;37m!\033[0;34m] \033[1;32mFINALIZANDO \033[0;34m[\033[0;37m!\033[0;34m] \033[0m"
    echo ""
    echo -e "      \033[0;34mAPRIMORANDO O PYTHON \033[0m"
    echo ""
    fun_bar 'otimize_python'
    clear
    echo ""
    echo -e "              \033[0;34m[\033[0;37m‚éö\033[0;34m] \033[1;32mFINALIZANDO \033[0;34m[\033[0;37m‚éö\033[0;34m] \033[0m"
    echo ""
    echo -e "      \033[0;34mCONCLUINDO FUN√á√ïES E DEFINI√á√ïES! \033[0m"
    echo ""
    fun_bar "$_Ink/list $_lnk $_Ink $_1nk $key"
    clear
    echo ""
    echo -e "\033[01;31m‚ïë\033[0;37m\033[5;34;47m                TERMINANDO AS CONFIGURA√á√ïES FINAIS !            \033[0;34m \033[0m\033[01;31m‚ïë"
    sleep 5s
    clear
    echo ""
    cd $HOME
    echo -e "        \033[0;34m ‚Ä¢ \033[1;32mINSTALACAO CONCLUIDA\033[0;34m ‚Ä¢ \033[0m"
    echo ""
    cd $HOME
    echo "clear" >>/root/.bashrc
    echo 'DATE=$(date +"%d-%m-%y")' >>/root/.bashrc
    echo 'TIME=$(date +"%T")' >>/root/.bashrc
    echo 'figlet -k SPACE - NET| lolcat' >>/root/.bashrc
    echo 'echo -e " NOME DO SERVIDOR : $HOSTNAME"' >>/root/.bashrc
    echo 'echo -e " SERVIDOR LIGADO √Ä : $(uptime -p)"' >>/root/.bashrc
    echo 'echo -e " DATA : $DATE"' >>/root/.bashrc
    echo 'echo -e " HORA : $TIME"' >>/root/.bashrc
    echo 'echo -e "@SpaceNet_SSH"' >>.bashrc
    echo 'echo -e "\033[0;37m DIGITE ( menu ) PARA ENTRAR\033[0m."' >>/root/.bashrc
    echo 'echo -e ""' >>/root/.bashrc
    date=$(date '+%Y-%m-%d <> %H:%M:%S')
    echo -e "\033[1;37m $system                          $date"
    figlet "SPACE - NET" | lolcat
    echo -e "\033[01;31m‚áõ\033[0;37m\033[5;34;47m                A INSTALACAO FOI CONCLUIDA               \033[0;34m \033[0m\033[01;31m‚áö"
    echo -e "\033[01;31m‚û•\033[0;34mPARA INICIAR DIGITE: \033[0mmenu\033[0m"
    echo -e "\033[01;31m‚á∂\033[0;34m MAIS INFORMACOES \033[0;37m(\033[1;36mTELEGRAM NO CANAL\033[0;37m): \033[0;32m@SpaceNet_SSH\033[0m"
    rm $HOME/Plus && cat /dev/null > ~/.bash_history && history -c
